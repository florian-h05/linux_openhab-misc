## Dynamic configuration
[tls.options]
  [tls.options.default]
    minVersion = "VersionTLS12"
    curvePreferences = ["secp521r1", "secp384r1", "X25519"]
    sniStrict = true
    alpnProtocols = ["h2"]
    cipherSuites = [
      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
      ]
  ## Enable the next three lines when you want to use client certificate authorization
  #  [tls.options.default.clientAuth]
  #    caFiles = ["clientAuth_CA.crt"]
  #    clientAuthType = "RequireAndVerifyClientCert"

  [tls.options.noAuth]
    minVersion = "VersionTLS12"
    curvePreferences = ["secp521r1", "secp384r1", "X25519"]
    sniStrict = true
    alpnProtocols = ["h2"]
    cipherSuites = [
      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
      ]

[http.routers.api]
  rule = "Host(`monitor.your_domain`)" # Replace your_domain with your real domain
  entrypoints = ["https"]
  service = "api@internal"
  middlewares = "secHeaders@file"
  [http.routers.api.tls]
    certResolver = "lets-encrypt"

[http.middlewares.secHeaders.headers]
  browserXssFilter = true
  contentTypeNosniff = true
  frameDeny = true
  # HSTS Configurationn
  stsIncludeSubdomains = true
  stsPreload = true
  stsSeconds = "31536000"
  customFrameOptionsValue = "SAMEORIGIN"
